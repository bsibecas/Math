#!/usr/bin/python3
import sys
import math

def usage():
    print("USAGE")
    print("     ./101pong x0 y0 z0 x1 y1 z1 n")
    print("DESCRIPTION")
    print("     x0  ball abscissa at time t - 1")
    print("     y0  ball abscissa at time t - 1")
    print("     z0  ball abscissa at time t - 1")
    print("     x1  ball abscissa at time t")
    print("     y1  ball abscissa at time t")
    print("     z1  ball abscissa at time t")
    print("     n   time shift (greater than or equal to zero, integer)")

def try_int(nb):
    try:
        int(nb)
    except ValueError:
        return False
    else:
        return True

def try_float(nb):
    try:
        float(nb)
    except ValueError:
        return False
    else:
        return True

def dif_floats():
    i = 1

    while i != 7:
        if try_float(sys.argv[i]):
            i = i + 1
        else:
            return 84
    return 0

def rigor():
    if len(sys.argv) == 2 and sys.argv[1] == "-h":
        usage()
        return 84
    elif len(sys.argv) < 8 or len(sys.argv) > 8:
        print("Error")
        return 84
    if dif_floats() == 84:
        print("Error")
        return 84
    if not try_int(sys.argv[7]):
        print("Error")
        return 84
    if int(sys.argv[7]) + 1 < 0:
        print("Error")
        return 84
    return 0

def calc_vector(x1, x2, y1, y2, z1, z2):
    x = x2 - x1
    y = y2 - y1
    z = z2 - z1
    print ("The velocity vector of the ball is:")
    print ("(%.2f, %.2f, %.2f)" % (x, y, z))

def position_ball(x1, x2, y1, y2, z1, z2, n):
    t = n
    n = n + 1
    x = (x2 - x1) * n + x1
    y = (y2 - y1) * n + y1
    z = (z2 - z1) * n + z1
    print ("At time t + %d, ball coordinates will be:" % t)
    print ("(%.2f, %.2f, %.2f)" % (x, y, z))
    return z

def hit_bat(x1, x2, y1, y2, z1, z2, verify):

    if verify == 1:
        print ("The ball won't reach the paddle.")
    else:
        x = x2 - x1
        y = y2 - y1
        z = z2 - z1
        v = (x * x + y * y + z * z)
        norm = math.sqrt(v)
        print ("The incidence angle is:")
        angle = (z2 - z1) / norm
        angle = math.asin(angle)
        angle = math.degrees(angle)
        angle = abs(angle)
        print("%.2f" % angle)

def hit(z2, z, x1, x2):
    verify = 0

    if z2 > 0 and z >= 0:
        verify = 1
    if z2 < 0 and z <= 0:
      verify = 1
    if x1 == x2:
        verify = 1
    return verify

def main():
    error = rigor()
    if error != 0:
        exit(84)
    else:
        x1 = float(sys.argv[1])
        y1 = float(sys.argv[2])
        z1 = float(sys.argv[3])
        x2 = float(sys.argv[4])
        y2 = float(sys.argv[5])
        z2 = float(sys.argv[6])
        n = int(sys.argv[7])

        calc_vector(x1,x2, y1, y2, z1, z2)
        z = position_ball(x1, x2, y1, y2, z1, z2, n)
        verify = hit(z2, z, x1, x2)
        hit_bat(x1, x2, y1, y2, z1, z2, verify)
        exit (0)

main()

